# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions

name: Build
on: [push, pull_request]

jobs:
  # https://github.com/pre-commit/action
  pre-commit:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  test:
    name: Test
    strategy:
      # Keep running so we can see if other tests pass
      fail-fast: false
      matrix:
        example:
          - docker
          - podman
    runs-on: ubuntu-22.04
    steps:
      - name: Enable rootless podman
        if: ${{ matrix.example == 'podman' }}
        run: |
          sudo apt-get update -q
          sudo apt-get install -q -y fuse-overlayfs
          podman info
          slirp4netns --version
          fuse-overlayfs --version

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: "*-requirements.txt"

      - uses: actions/setup-node@v4

      - name: Install dependencies
        run: |
          python -m pip install -r dev-requirements.txt
          npm install -g configurable-http-proxy

      - name: Update setuptools_scm version
        run: python setup.py build

      - name: Install Ansible requirements
        run: |
          cd "examples/${{ matrix.example }}"
          ansible-galaxy collection install -p collections -r requirements.yml
          cd ../..

      - name: Run tests
        run: |
          if [ "${{ matrix.example }}" = podman ]; then
            PYTESTMARK="not docker"
          else
            PYTESTMARK="not podman"
          fi
          python -mpytest --cov=ansiblespawner tests -v -m "$PYTESTMARK" --cov-report=xml --cov-report=term-missing --cov-fail-under=95

      # https://github.com/marketplace/actions/codecov
      - name: Upload coverage stats
        uses: codecov/codecov-action@v5
        # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
        # Upload regardless of whether tests pass or fail
        if: ${{ !cancelled() }}
        with:
          file: ./coverage.xml
          # fail_ci_if_error: true

  aws-deploy:
    name: AWS Localstack test
    strategy:
      # Keep running so we can see if other tests pass
      fail-fast: false
      matrix:
        scenario:
          - localstack-provision
          - podman-deploy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: "*-requirements.txt"

      - name: Install Ansible requirements
        run: |
          python -m pip install -r dev-requirements.txt

      - name: Override molecule ansible_python_interpreter
        run: |
          echo "VIRTUAL_ENV=$(dirname $(dirname $(which python)))" >> "$GITHUB_ENV"

      - name: Modify jupyterhub-deploy.yml to use this branch instead of main
        run: |
          CURRENT_REF="git+https://github.com/manics/jupyterhub-ansiblespawner.git@main"
          NEW_REF="git+https://github.com/${{ github.repository }}.git@${{ github.ref }}"
          sed -i "s%$CURRENT_REF%$NEW_REF%" examples/aws-ec2/jupyterhub-deploy.yml
          git diff

      - name: Run tests
        run: |
          cd examples/aws-ec2
          ./ci/run-localstack.sh -d
          sleep 10
          molecule --debug -vv test --scenario-name ${{ matrix.scenario }}

  # https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  publish-pypi:
    name: Pypi
    if: startsWith(github.ref, 'refs/tags')
    needs:
      # Only publish if other jobs passed
      - pre-commit
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: Build package
        run: |
          python -mpip install wheel
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
